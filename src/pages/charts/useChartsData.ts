export const dateTime = [
  1740351650191, 1740351776377, 1740351900223, 1740352024157, 1740352147601,
  1740352268891, 1740352362388, 1740352485439, 1740352608244, 1740352735388,
  1740352860127, 1740352981494, 1740353073728, 1740353199125, 1740353321950,
  1740353443214, 1740353566190, 1740353693573, 1740353797093, 1740353920011,
  1740354042048, 1740354165074, 1740354289079, 1740354385477, 1740354509058,
  1740354632036, 1740354754004, 1740354875470, 1740354997373, 1740355120073,
  1740355242703, 1740355336996, 1740355460066, 1740355583004, 1740355708062,
  1740355832663, 1740355955664, 1740356077734, 1740356172886, 1740356295757,
  1740356417729, 1740356539670, 1740356661733, 1740356785669, 1740356906691,
  1740357030664, 1740357121958, 1740357245722, 1740357367735, 1740357489664,
  1740357614310, 1740357737696, 1740357861681, 1740357953700, 1740358077924,
  1740358203929, 1740358326680, 1740358449099, 1740358571974, 1740358696378,
  1740358790143, 1740358913664, 1740359038001, 1740359162166, 1740359285687,
  1740359379738, 1740359503691, 1740359628664, 1740359753326, 1740359875724,
  1740359997665, 1740360123459, 1740360214044, 1740360343247, 1740360467663,
  1740360589485, 1740360710710, 1740360837736, 1740360930908, 1740361053011,
  1740361177002, 1740361298716, 1740361419758, 1740361544032, 1740361668153,
  1740361760778, 1740361883669, 1740362009672, 1740362134628, 1740362256764,
  1740362378748, 1740362500717, 1740362593726, 1740362716715, 1740362838664,
  1740362965700, 1740363089947, 1740363212151, 1740363335027, 1740363456909,
  1740363549746, 1740363673756, 1740363797737, 1740363921011, 1740364045708,
  1740364167748, 1740364260744, 1740364383737, 1740364507788, 1740364631749,
  1740364755727, 1740364879904, 1740365003974, 1740365094721, 1740365215706,
  1740365345064, 1740365468686, 1740365593750, 1740365687733, 1740365811742,
  1740365954669, 1740366060748, 1740366183113, 1740366304686, 1740366426292,
  1740366549773, 1740366641754, 1740366763717, 1740366887994, 1740367013692,
  1740367136672, 1740367257745, 1740367379114, 1740367501693, 1740367594726,
  1740367720804, 1740367843847, 1740367965411, 1740368087343, 1740368209327,
  1740368331435, 1740368427317, 1740368551777, 1740368678390, 1740368805091,
  1740368928322, 1740369040882, 1740369165213, 1740369258188, 1740369381256,
  1740369504623, 1740369626173, 1740369747181, 1740369870183, 1740369990909,
  1740370112219, 1740370237246, 1740370329191, 1740370452296, 1740370576447,
  1740370701250, 1740370826183, 1740370950218, 1740371071179, 1740371162257,
  1740371283191, 1740371406205, 1740371529260, 1740371656305, 1740371780617,
  1740371905158, 1740371997279, 1740372125158, 1740372250230, 1740372372437,
  1740372495196, 1740372617551, 1740372715184, 1740372840060, 1740372965248,
  1740373088185, 1740373211195, 1740373332254, 1740373426706, 1740373549238,
  1740373674514, 1740373797339, 1740373920358, 1740374042169, 1740374164791,
  1740374256234, 1740374380753, 1740374505930, 1740374631158, 1740374761249,
  1740374854485, 1740374976421, 1740375099279, 1740375226455, 1740375349901,
  1740375446259, 1740375571191, 1740375691327, 1740375816772, 1740375940421,
  1740376062785, 1740376186781, 1740376281008, 1740376403767, 1740376526850,
  1740376650726, 1740376774957, 1740376898330, 1740377020841, 1740377113951,
  1740377236215, 1740377357794, 1740377484301, 1740377608271, 1740377732726,
  1740377854784, 1740377947721, 1740378066609, 1740378194686, 1740378316685,
  1740378450058, 1740378543060, 1740378677996, 1740378801150, 1740378923332,
  1740379018764, 1740379146040, 1740379269192, 1740379392102, 1740379515045,
  1740379638104, 1740379730178, 1740379854163, 1740379978338, 1740380104419,
  1740380228042, 1740380351059, 1740380443994, 1740380565428, 1740380694405,
  1740380819775, 1740380941410, 1740381065773, 1740381187155, 1740381279047,
  1740381401062, 1740381527047, 1740381649524, 1740381776105, 1740381899313,
  1740381992058, 1740382118312, 1740382180061, 1740382371511, 1740382465311,
  1740382589277, 1740382713971, 1740382836304, 1740382958326, 1740383081478,
  1740383204524, 1740383297331, 1740383416331, 1740383536681, 1740383678473,
  1740383804210, 1740383898617, 1740384024153, 1740384149213, 1740384273182,
  1740384397303, 1740384491407, 1740384618694, 1740384745167, 1740384868460,
  1740384992232, 1740385086436, 1740385225020, 1740385347103, 1740385470021,
  1740385560157, 1740385682070, 1740385804151, 1740385927603, 1740386051123,
  1740386173085, 1740386294067, 1740386418364, 1740386542083, 1740386635182,
  1740386759719, 1740386881692, 1740387004684, 1740387126104, 1740387248017,
  1740387374075, 1740387470398, 1740387595633, 1740387717160, 1740387840185,
  1740387962161, 1740388084119, 1740388207086, 1740388300155, 1740388422145,
  1740388539132, 1740388661751, 1740388787689, 1740388908927, 1740389029737,
  1740389152732, 1740389279720, 1740389377436, 1740389516752, 1740389635726,
  1740389732690, 1740389854747, 1740389978677, 1740390101656, 1740390231032,
  1740390323574, 1740390447399, 1740390572757, 1740390695746, 1740390817687,
  1740390939916, 1740391061993, 1740391156334, 1740391278950, 1740391405407,
  1740391527058, 1740391649978, 1740391777717, 1740391869698, 1740391994757,
  1740392116668, 1740392238654, 1740392362417, 1740392484351, 1740392606292,
  1740392730296, 1740392823654, 1740392947352, 1740393071402, 1740393195286,
  1740393317607, 1740393441103, 1740393533618, 1740393659279, 1740393780377,
  1740393903794, 1740394026363, 1740394150277, 1740394272387, 1740394394357,
  1740394487297, 1740394611328, 1740394735302, 1740394858030, 1740394979350,
  1740395101360, 1740395224486, 1740395347335, 1740395438336, 1740395575325,
  1740395701828, 1740395794413, 1740395919392, 1740396042422, 1740396166604,
  1740396291425, 1740396415672, 1740396538368, 1740396632642, 1740396757391,
  1740396880337, 1740397003333, 1740397125732, 1740397250334, 1740397345433,
  1740397467335, 1740397591425, 1740397715339, 1740397837411, 1740397959695,
  1740398081325, 1740398201447, 1740398323534, 1740398415485, 1740398539086,
  1740398661457, 1740398783490, 1740398909484, 1740399032542, 1740399154507,
  1740399246498, 1740399369500, 1740399491792, 1740399613821, 1740399737541,
  1740399860672, 1740399984535, 1740400106530, 1740400202998, 1740400326622,
  1740400449157, 1740400575248, 1740400697155, 1740400792605, 1740400915526,
  1740401037345, 1740401159631, 1740401286626, 1740401394812, 1740401518678,
  1740401639674, 1740401762226, 1740401884222, 1740402009156, 1740402130156,
  1740402222222, 1740402344278, 1740402469666, 1740402595465, 1740402716768,
  1740402840723, 1740402964331, 1740403056576, 1740403180960, 1740403306912,
  1740403429010, 1740403551723, 1740403649064, 1740403771725, 1740403895169,
  1740404017057, 1740404143734, 1740404268710, 1740404364673, 1740404487673,
  1740404616759, 1740404740961, 1740404865876, 1740404958755, 1740405082484,
  1740405205555, 1740405329761, 1740405453216, 1740405578065, 1740405699700,
  1740405790747, 1740405914858, 1740406040670, 1740406164704, 1740406275563,
  1740406401511, 1740406525490, 1740406650595, 1740406771574, 1740406862122,
  1740406988144, 1740407110497, 1740407233503, 1740407355765, 1740407479522,
  1740407604905, 1740407697530, 1740407819565, 1740407940528, 1740408062267,
  1740408184537, 1740408306720, 1740408431532, 1740408557383, 1740408650309,
  1740408773365, 1740408895566, 1740409019402, 1740409142388, 1740409268836,
  1740409360648, 1740409484635, 1740409609308, 1740409732353, 1740409855311,
  1740409977382, 1740410101424, 1740410223691, 1740410317623, 1740410433357,
  1740410559365, 1740410683940, 1740410807608, 1740410931571, 1740411056266,
  1740411150900, 1740411272356, 1740411398923, 1740411523322, 1740411646010,
  1740411767628, 1740411862305, 1740411985582, 1740412110884, 1740412233952,
  1740412355473, 1740412482405, 1740412573492, 1740412695490, 1740412817433,
  1740412940359, 1740413062936, 1740413184491, 1740413306434, 1740413429413,
  1740413529434, 1740413651434, 1740413773744, 1740413897630, 1740414021410,
  1740414145101, 1740414266461, 1740414359492, 1740414482402, 1740414605487,
  1740414727486, 1740414850486, 1740414975414, 1740415098477, 1740415221477,
  1740415315750, 1740415437498, 1740415561381, 1740415684470, 1740415805497,
  1740415929573, 1740416053911, 1740416146485, 1740416269740, 1740416392472,
  1740416514499, 1740416639422, 1740416761466, 1740416886985, 1740416978615,
  1740417116326, 1740417240402, 1740417334393, 1740417456628, 1740417577730,
  1740417700926, 1740417824863, 1740417946481, 1740418070346, 1740418195457,
  1740418287422, 1740418411210, 1740418542569, 1740418665866, 1740418786742,
  1740418907719, 1740419029756, 1740419121780, 1740419244751, 1740419366721,
  1740419489756, 1740419611718, 1740419735719, 1740419856787, 1740419979819,
  1740420071787, 1740420197535, 1740420319759, 1740420450734, 1740420573792,
  1740420695837, 1740420786798, 1740420910717, 1740421032747, 1740421157446,
  1740421279448, 1740421402723, 1740421528721, 1740421621718, 1740421744752,
  1740421869237, 1740421994245, 1740422117053, 1740422242694, 1740422332806,
  1740422467724, 1740422589844, 1740422713022, 1740422836727, 1740422928814,
  1740423051801, 1740423177769, 1740423301752, 1740423425788, 1740423546770,
  1740423642505, 1740423766724, 1740423890795, 1740423982883, 1740424118848,
  1740424243226, 1740424367676, 1740424491836, 1740424613899, 1740424737720,
  1740424859860, 1740424951888, 1740425073926, 1740425198996, 1740425321911,
  1740425444885, 1740425566916, 1740425689688, 1740425811873, 1740425902882,
  1740426025836, 1740426149092, 1740426270869, 1740426393342, 1740426515902,
  1740426638895, 1740426760922, 1740426853917, 1740426976842, 1740427099278,
  1740427221920, 1740427344835, 1740427467838, 1740427590834, 1740427714879,
  1740427808894, 1740427930835, 1740428054036, 1740428177946, 1740428299873,
  1740428421908, 1740428543899, 1740428667861, 1740428759928, 1740428882888,
  1740429005839, 1740429127886, 1740429251059, 1740429375881, 1740429499911,
  1740429592834, 1740429715948, 1740429844254, 1740429965912, 1740430090918,
  1740430183400, 1740430312905, 1740430435683, 1740430558917, 1740430681073,
  1740430804944, 1740430927904, 1740431019269, 1740431145474, 1740431270662,
  1740431392964, 1740431516896, 1740431638952, 1740431762894, 1740431854888,
  1740431977972, 1740432100928, 1740432222896, 1740432345904, 1740432470008,
  1740432590991, 1740432714896, 1740432805885, 1740432930345, 1740433052933,
  1740433176883, 1740433299881, 1740433421895, 1740433545971, 1740433638881,
  1740433760926, 1740433884648, 1740434006153, 1740434128968, 1740434251926,
  1740434378889, 1740434471924, 1740434595887, 1740434720940, 1740434845912,
  1740434969909, 1740435093882, 1740435186890, 1740435308948, 1740435429969,
  1740435553457, 1740435673939, 1740435796896, 1740435920906, 1740436041881,
  1740436135967, 1740436259880, 1740436384991, 1740436507975, 1740436630917,
  1740436755896, 1740436847962, 1740436980959, 1740437103963, 1740437225966,
  1740437349210, 1740437471973, 1740437563898, 1740437689627, 1740437812964,
  1740437933971, 1740437994937,
];

const soc = [
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.4,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.3,
  10.1,
  10.1,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.0,
  10.4,
  10.8,
  11.3,
  11.7,
  12.0,
  12.1,
  12.1,
  12.1,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  null,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  12.0,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.9,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.8,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.7,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.6,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.4,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.3,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.1,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  11.0,
  10.8,
  10.8,
  10.8,
  10.8,
  10.8,
  10.8,
  10.8,
  10.8,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.7,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
  10.6,
];

export const socData = dateTime.map((res: any, index: number) => [
  res,
  soc[index],
]);

const soh = [
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  null,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
  99.9,
];

export const sohData = dateTime.map((res: any, index: number) => [
  res,
  soh[index],
]);

const ccl = [
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  null,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
];

export const cclData = dateTime.map((res: any, index: number) => [
  res,
  ccl[index],
]);

const dcl = [
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  null,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
];

export const dclData = dateTime.map((res: any, index: number) => [
  res,
  dcl[index] ? -dcl[index] : null,
]);

const current = [
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  -4.801,
  -4.7,
  -4.7,
  -4.801,
  -4.7,
  -4.7,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  null,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
  0.0,
];

export const currentData = dateTime.map((res: any, index: number) => [
  res,
  current[index],
]);

const voltage = [
  627.3,
  627.3,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.1,
  627.2,
  627.2,
  627.1,
  627.1,
  627.2,
  627.2,
  627.2,
  627.0,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.1,
  627.2,
  627.0,
  627.0,
  627.1,
  627.0,
  627.1,
  627.1,
  626.9,
  627.0,
  627.0,
  627.0,
  627.1,
  627.0,
  627.1,
  627.0,
  627.0,
  627.0,
  627.2,
  627.0,
  627.0,
  626.8,
  626.9,
  626.9,
  627.2,
  626.8,
  627.0,
  626.9,
  627.0,
  626.8,
  626.9,
  626.8,
  626.8,
  626.9,
  627.0,
  626.8,
  626.9,
  626.8,
  626.8,
  626.7,
  627.0,
  626.8,
  626.7,
  626.8,
  626.8,
  626.9,
  626.8,
  626.7,
  626.7,
  626.8,
  626.8,
  626.8,
  626.7,
  626.8,
  626.8,
  626.8,
  626.7,
  626.9,
  626.7,
  626.7,
  626.8,
  626.7,
  626.8,
  626.8,
  626.6,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.6,
  626.7,
  626.5,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.6,
  626.7,
  626.7,
  626.7,
  626.7,
  626.7,
  626.6,
  626.5,
  626.2,
  626.7,
  626.7,
  626.6,
  626.6,
  626.6,
  626.6,
  626.4,
  626.5,
  626.6,
  626.7,
  626.5,
  626.6,
  626.5,
  626.4,
  626.5,
  626.4,
  626.5,
  626.5,
  626.5,
  626.5,
  626.3,
  626.5,
  626.3,
  626.5,
  626.5,
  626.5,
  626.4,
  626.5,
  626.5,
  626.4,
  626.5,
  626.5,
  626.5,
  626.3,
  626.2,
  626.2,
  626.4,
  626.3,
  626.2,
  626.3,
  626.2,
  626.3,
  626.2,
  626.3,
  626.2,
  626.3,
  626.2,
  626.3,
  626.3,
  626.3,
  626.3,
  626.3,
  626.2,
  626.3,
  626.3,
  626.3,
  626.2,
  626.2,
  626.2,
  626.2,
  626.3,
  626.2,
  626.2,
  626.3,
  626.2,
  626.3,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.3,
  626.2,
  626.2,
  626.1,
  626.2,
  626.2,
  626.2,
  626.2,
  626.2,
  626.0,
  626.1,
  626.0,
  626.2,
  626.1,
  626.2,
  626.2,
  626.2,
  626.1,
  626.2,
  626.1,
  629.6,
  633.2,
  635.1,
  636.3,
  636.9,
  637.6,
  633.5,
  633.3,
  632.8,
  632.3,
  632.2,
  632.0,
  632.0,
  631.8,
  631.7,
  631.5,
  631.4,
  631.5,
  631.2,
  631.3,
  631.2,
  631.2,
  631.2,
  631.1,
  631.0,
  631.2,
  631.1,
  630.8,
  631.0,
  630.9,
  630.9,
  630.7,
  630.8,
  630.9,
  630.7,
  630.7,
  630.6,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.7,
  630.5,
  630.6,
  630.6,
  630.5,
  630.3,
  null,
  630.4,
  630.3,
  630.3,
  630.5,
  630.3,
  630.3,
  630.3,
  630.3,
  630.3,
  630.3,
  630.2,
  630.3,
  630.4,
  630.2,
  630.2,
  630.2,
  630.2,
  630.2,
  630.2,
  630.2,
  630.2,
  630.1,
  630.2,
  630.2,
  630.1,
  630.2,
  629.9,
  630.1,
  630.2,
  630.2,
  630.1,
  629.9,
  630.0,
  630.1,
  630.0,
  630.2,
  629.9,
  629.8,
  629.7,
  629.8,
  629.9,
  630.2,
  629.8,
  629.9,
  629.8,
  629.8,
  629.8,
  629.8,
  629.8,
  630.0,
  629.9,
  630.0,
  629.9,
  629.8,
  629.8,
  629.8,
  629.8,
  629.8,
  629.7,
  629.7,
  629.8,
  629.7,
  629.7,
  629.8,
  629.8,
  629.7,
  629.7,
  629.7,
  629.6,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.7,
  629.5,
  629.5,
  629.6,
  629.5,
  629.5,
  629.7,
  629.6,
  629.7,
  629.6,
  629.4,
  629.6,
  629.4,
  629.7,
  629.6,
  629.5,
  629.5,
  629.6,
  629.5,
  629.5,
  629.4,
  629.5,
  629.5,
  629.3,
  629.4,
  629.3,
  629.5,
  629.3,
  629.3,
  629.5,
  629.3,
  629.3,
  629.4,
  629.3,
  629.2,
  629.5,
  629.2,
  629.4,
  629.3,
  629.4,
  629.2,
  629.3,
  629.3,
  629.2,
  629.3,
  629.3,
  629.3,
  629.2,
  629.2,
  629.2,
  629.1,
  629.2,
  629.2,
  629.2,
  629.2,
  629.1,
  629.2,
  629.2,
  629.2,
  629.2,
  629.2,
  629.1,
  629.2,
  629.0,
  629.0,
  629.1,
  629.1,
  629.1,
  628.8,
  629.2,
  629.1,
  629.0,
  628.9,
  628.9,
  629.0,
  629.2,
  629.1,
  629.1,
  629.0,
  629.0,
  629.0,
  629.1,
  628.9,
  629.0,
  628.9,
  629.1,
  629.0,
  628.9,
  628.8,
  629.1,
  628.7,
  628.8,
  628.8,
  628.9,
  628.9,
  628.8,
  628.8,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.8,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.6,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.5,
  628.6,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.6,
  628.6,
  628.7,
  628.7,
  628.7,
  628.7,
  628.7,
  628.6,
  628.7,
  628.6,
  628.5,
  628.6,
  628.5,
  628.5,
  628.6,
  628.3,
  628.5,
  628.6,
  628.7,
  628.4,
  628.5,
  628.2,
  628.4,
  628.5,
  628.3,
  628.3,
  628.5,
  628.3,
  628.3,
  628.4,
  628.2,
  628.3,
  628.3,
  628.4,
  628.2,
  628.1,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.3,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.3,
  628.2,
  628.2,
  628.2,
  628.2,
  628.2,
  628.0,
  628.2,
  628.2,
  628.2,
  628.2,
  628.1,
  628.2,
  628.1,
  628.1,
  628.1,
  628.2,
  628.2,
  628.0,
  628.1,
  628.1,
  628.1,
  628.0,
  628.2,
  628.1,
  627.9,
  628.0,
  628.0,
  628.0,
  627.8,
  628.1,
  628.0,
  628.0,
  627.8,
  627.9,
  628.1,
  627.8,
  627.8,
  627.8,
  627.8,
  627.8,
  627.8,
  627.7,
  627.8,
  627.8,
  628.0,
  627.8,
  627.8,
  627.7,
  627.8,
  627.7,
  627.8,
  627.7,
  627.7,
  627.7,
  627.8,
  627.8,
  627.7,
  627.7,
  627.8,
  627.7,
  627.7,
  627.7,
  627.7,
  627.7,
  627.7,
  627.5,
  627.7,
  627.7,
  627.7,
  627.6,
  627.6,
  627.7,
  627.7,
  627.7,
  627.7,
  627.7,
  627.7,
  627.7,
  627.5,
  627.7,
  627.7,
  627.5,
  627.7,
  627.7,
  627.7,
  627.5,
  627.7,
  627.6,
  627.7,
  627.7,
  627.3,
  627.7,
  627.6,
  627.5,
  627.6,
  627.5,
  627.7,
  627.6,
  627.7,
  627.5,
  627.5,
  627.5,
  627.5,
  627.6,
  627.7,
  627.5,
  627.5,
  627.6,
  627.2,
  627.6,
  627.5,
  627.3,
  627.5,
  627.3,
  627.3,
  627.4,
  627.3,
  627.2,
  627.5,
  627.3,
  627.3,
  627.2,
  627.5,
  627.3,
  627.2,
  627.2,
  627.2,
  627.2,
  627.3,
  627.4,
  627.3,
  627.2,
  627.1,
  627.3,
  627.3,
  627.2,
  627.3,
  627.2,
  627.2,
  627.2,
  627.2,
  627.1,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.2,
  627.1,
  627.2,
  627.1,
  627.0,
  627.0,
  627.1,
  627.1,
  627.0,
  627.1,
  627.2,
  627.2,
  627.1,
  627.0,
  627.1,
  627.0,
  627.0,
  626.9,
  627.0,
  626.9,
  627.1,
  627.0,
  627.0,
  626.7,
  627.1,
  627.0,
  627.0,
  627.0,
  626.8,
  626.8,
  626.8,
  626.8,
  627.1,
  627.0,
  626.7,
  626.8,
  626.8,
  626.7,
  627.0,
  627.0,
  626.7,
  626.8,
  626.8,
  627.0,
  626.8,
];

export const voltageData = dateTime.map((res: any, index: number) => [
  res,
  voltage[index],
]);

const maxVoltage = [
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.275,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.274,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.273,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.272,
  3.29,
  3.309,
  3.318,
  3.324,
  3.328,
  3.331,
  3.309,
  3.307,
  3.305,
  3.304,
  3.303,
  3.302,
  3.301,
  3.301,
  3.3,
  3.3,
  3.299,
  3.299,
  3.299,
  3.298,
  3.298,
  3.298,
  3.298,
  3.297,
  3.297,
  3.297,
  3.297,
  3.297,
  3.297,
  3.296,
  3.296,
  3.296,
  3.296,
  3.296,
  3.296,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.295,
  3.294,
  3.294,
  3.294,
  3.294,
  3.294,
  3.294,
  3.294,
  null,
  3.294,
  3.294,
  3.294,
  3.294,
  3.294,
  3.294,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.293,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.292,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.291,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.29,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.289,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.288,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.287,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.286,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.285,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.284,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.283,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.282,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.281,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.28,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.279,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.278,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.277,
  3.276,
  3.276,
  3.276,
  3.276,
  3.276,
];

export const maxVoltageDeviceNo = [
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C10",
  "C1-M3-C10",
  "C1-M3-C10",
  "C1-M3-C10",
  "C1-M3-C10",
  "C1-M3-C10",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  null,
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C4",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C6",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C2",
  "C1-M3-C4",
  "C1-M3-C4",
];

export const maxVoltageData = dateTime.map((res: any, index: number) => [
  res,
  maxVoltage[index],
  maxVoltageDeviceNo[index],
]);

const minVoltage = [
  3.224,
  3.224,
  3.224,
  3.224,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.221,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.22,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.219,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.218,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.217,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.216,
  3.233,
  3.254,
  3.264,
  3.271,
  3.276,
  3.28,
  3.261,
  3.258,
  3.256,
  3.255,
  3.253,
  3.252,
  3.252,
  3.251,
  3.25,
  3.25,
  3.25,
  3.249,
  3.249,
  3.249,
  3.248,
  3.248,
  3.248,
  3.247,
  3.247,
  3.247,
  3.247,
  3.247,
  3.247,
  3.246,
  3.246,
  3.246,
  3.246,
  3.246,
  3.246,
  3.246,
  3.245,
  3.245,
  3.245,
  3.245,
  3.245,
  3.245,
  3.245,
  3.245,
  3.244,
  3.244,
  3.244,
  3.244,
  3.244,
  3.244,
  3.244,
  3.244,
  3.244,
  null,
  3.243,
  3.243,
  3.243,
  3.243,
  3.243,
  3.243,
  3.243,
  3.243,
  3.243,
  3.243,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.242,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.241,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.24,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.239,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.238,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.237,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.236,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.235,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.234,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.233,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.232,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.231,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.23,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.229,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.228,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.227,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.226,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.225,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.224,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.223,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.222,
  3.221,
  3.221,
];

export const minVoltageDeviceNo = [
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  null,
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
  "C1-M7-C1",
];

export const minVoltageData = dateTime.map((res: any, index: number) => [
  res,
  minVoltage[index],
  minVoltageDeviceNo[index],
]);

const diffVoltage = [
  54.0,
  54.0,
  54.0,
  54.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  54.0,
  54.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  56.0,
  56.0,
  56.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  55.0,
  55.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  56.0,
  57.0,
  55.0,
  54.0,
  53.0,
  52.0,
  51.0,
  48.0,
  49.0,
  49.0,
  49.0,
  50.0,
  50.0,
  49.0,
  50.0,
  50.0,
  50.0,
  49.0,
  50.0,
  50.0,
  49.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  49.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  51.0,
  51.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  null,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  50.0,
  50.0,
  50.0,
  50.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  50.0,
  50.0,
  50.0,
  50.0,
  50.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  51.0,
  51.0,
  51.0,
  51.0,
  51.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  53.0,
  53.0,
  53.0,
  53.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  52.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  54.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  54.0,
  54.0,
  54.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  53.0,
  53.0,
  53.0,
  53.0,
  53.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  55.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  54.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  55.0,
  54.0,
  54.0,
  54.0,
  55.0,
  55.0,
];

export const diffVoltageData = dateTime.map((res: any, index: number) => [
  res,
  diffVoltage[index],
]);

const power = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  -3022,
  -2976,
  -2984,
  -3054,
  -2993,
  -2996,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  null,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
];

export const powerData = dateTime.map((res: any, index: number) => [
  res,
  power[index],
]);

const maxTemperature = [
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  29.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  null,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  28.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  26.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
  27.0,
];

export const maxTemperatureDeviceNo = [
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  null,
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C4",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C2",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
  "C1-M1-C1",
];

export const maxTemperatureData = dateTime.map((res: any, index: number) => [
  res,
  maxTemperature[index],
  maxTemperatureDeviceNo[index],
]);

const minTemperature = [
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  24.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  null,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  23.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
  22.0,
];

export const minTemperatureDeviceNo = [
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  null,
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C7",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C6",
  "C1-M8-C5",
  "C1-M8-C5",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C4",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M8-C1",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C5",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C5",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M5-C7",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C5",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M5-C6",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C4",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M6-C7",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
  "C1-M7-C4",
];

export const minTemperatureData = dateTime.map((res: any, index: number) => [
  res,
  minTemperature[index],
  minTemperatureDeviceNo[index],
]);

const totalCharge = [
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.6,
  1846.7,
  1846.8,
  1846.9,
  1847.0,
  1847.1,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  null,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
  1847.2,
];

export const totalChargeData = dateTime.map((res: any, index: number) => [
  res,
  totalCharge[index],
]);

const totalDischarge = [
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  null,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
  1707.7,
];

export const totalDischargeData = dateTime.map((res: any, index: number) => [
  res,
  totalDischarge[index],
]);
